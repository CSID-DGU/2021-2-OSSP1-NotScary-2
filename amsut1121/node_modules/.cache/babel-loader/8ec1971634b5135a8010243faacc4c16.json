{"ast":null,"code":"var _jsxFileName = \"/Users/pyu/Documents/2021-2-OSSP1-NotScary-2/amsut1121/src/components/poseHistory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Webcam from \"react-webcam\";\nimport moment from \"moment\";\nimport \"./poseHistory.css\";\nimport raw from \"./history.txt\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PoseHistory(pros) {\n  _s();\n\n  const [getDatum, setDatum] = useState([]);\n  let textToArray = [];\n  useEffect(() => {\n    const data = fetch(raw).then(r => r.text()).then(text => {\n      //console.log('text decoded: ', text);\n      textToArray = text.toString().split('\\n');\n      const result = textToArray.map(item => item.split(' '));\n      setDatum(result);\n    });\n  }, []);\n  const [getMoment, setMoment] = useState(moment());\n  const today = getMoment;\n  const firstWeek = today.clone().startOf('month').week();\n  const lastWeek = today.clone().endOf('month').week() == 1 ? 53 : today.clone().endOf('month').week();\n\n  const calendarArr = () => {\n    let result = [];\n    let week = firstWeek;\n\n    for (week; week <= lastWeek; week++) {\n      result = result.concat( /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"defaultTr\",\n        children: Array(7).fill(0).map((data, index) => {\n          let days = today.clone().startOf('year').week(week).startOf('week').add(index, 'day');\n          const matchDay = getDatum.find(data => data[0] == days.format('YYYYMMDD'));\n\n          if (moment().format('YYYYMMDD') === days.format('YYYYMMDD')) {\n            if (matchDay != undefined) {\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"todayTd\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: days.format('D')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 76\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 81\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"\\uB098\\uC05C \\uC790\\uC138 \", matchDay[1], \"\\uD68C \\uAC80\\uCD9C!\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 41\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"todayTd\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: days.format('D')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 45\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 41\n              }, this);\n            }\n          } else if (days.format('MM') !== today.format('MM')) {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"notThisMonthTd\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: days.format('D')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 41\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 37\n            }, this);\n          } else {\n            if (matchDay != undefined) {\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"badTd\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: days.format('D')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 76\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 81\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"\\uB098\\uC05C \\uC790\\uC138 \", matchDay[1], \"\\uD68C \\uAC80\\uCD9C!\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 41\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"defaultTd\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: days.format('D')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 45\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 41\n              }, this);\n            }\n          }\n        })\n      }, week, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this));\n    }\n\n    return result;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [console.log('아'), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"monthSelect-Wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setMoment(getMoment.clone().subtract(1, 'month'));\n        },\n        className: \"leftRightButton\",\n        children: \"\\u25C0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: today.format('YYYY년 MM월')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setMoment(getMoment.clone().add(1, 'month'));\n        },\n        className: \"leftRightButton\",\n        children: \"\\u25B6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            color: \"red\"\n          },\n          children: \"\\uC77C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"\\uC6D4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"\\uD654\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"\\uC218\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"\\uBAA9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"\\uAE08\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            color: \"blue\"\n          },\n          children: \"\\uD1A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: calendarArr()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PoseHistory, \"pscEEMqHAayaytm6DjzXI+NP2YE=\");\n\n_c = PoseHistory;\nexport default PoseHistory;\n\nvar _c;\n\n$RefreshReg$(_c, \"PoseHistory\");","map":{"version":3,"sources":["/Users/pyu/Documents/2021-2-OSSP1-NotScary-2/amsut1121/src/components/poseHistory.js"],"names":["React","useState","useEffect","useRef","Webcam","moment","raw","PoseHistory","pros","getDatum","setDatum","textToArray","data","fetch","then","r","text","toString","split","result","map","item","getMoment","setMoment","today","firstWeek","clone","startOf","week","lastWeek","endOf","calendarArr","concat","Array","fill","index","days","add","matchDay","find","format","undefined","console","log","subtract","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Webcam from \"react-webcam\";\nimport moment from \"moment\";\nimport \"./poseHistory.css\"\nimport raw from \"./history.txt\"\n\nfunction PoseHistory(pros) {\n    const [getDatum, setDatum] = useState([]);\n    \n    let textToArray = []\n    useEffect(() => {\n        const data = fetch(raw).then(r => r.text())\n        .then(text => {\n            //console.log('text decoded: ', text);\n            textToArray = text.toString().split('\\n');\n            const result = textToArray.map((item) => item.split(' '));\n            setDatum(result);\n        })\n    }, [])\n    \n    const [getMoment, setMoment] = useState(moment());\n\n    const today = getMoment;\n    const firstWeek = today.clone().startOf('month').week();\n    const lastWeek = today.clone().endOf('month').week() == 1 ? 53: today.clone().endOf('month').week();\n\n    const calendarArr = () => {\n        let result = [];\n        let week = firstWeek;\n        for(week; week<=lastWeek; week++) {\n            result = result.concat(\n                <tr key = {week} className = \"defaultTr\">\n                    {\n                        Array(7).fill(0).map((data, index) => {\n                            let days = today.clone().startOf('year').week(week).startOf('week').add(index, 'day');\n                            const matchDay = getDatum.find(data => data[0] == days.format('YYYYMMDD'))\n                            if(moment().format('YYYYMMDD') === days.format('YYYYMMDD')) {\n                                if(matchDay != undefined){\n                                    return (\n                                        <td key={index} className=\"todayTd\">\n                                            <span>{days.format('D')}</span><br/><br/>\n                                            <span>나쁜 자세 {matchDay[1]}회 검출!</span>\n                                        </td>\n                                    )\n                                }\n                                else {\n                                    return (\n                                        <td key={index} className=\"todayTd\">\n                                            <span>{days.format('D')}</span>\n                                        </td>\n                                    )\n                                }\n                            } else if(days.format('MM') !== today.format('MM')) {\n                                return (\n                                    <td key={index} className=\"notThisMonthTd\">\n                                        <span>{days.format('D')}</span>\n                                    </td>\n                                );\n                            } else {\n                                if(matchDay != undefined){\n                                    return (\n                                        <td key={index} className=\"badTd\">\n                                            <span>{days.format('D')}</span><br/><br/>\n                                            <span>나쁜 자세 {matchDay[1]}회 검출!</span>\n                                        </td>\n                                    )\n                                }\n                                else {\n                                    return (\n                                        <td key={index} className=\"defaultTd\">\n                                            <span>{days.format('D')}</span>\n                                        </td>\n                                    )\n                                }\n                            }\n                        })\n                    }\n                </tr>\n            )\n        }\n        return result;\n    }\n\n\n    return (\n        <div>\n            {console.log('아')}\n            <div className = \"monthSelect-Wrapper\">\n                <button onClick = {() => {setMoment(getMoment.clone().subtract(1, 'month'))}} className=\"leftRightButton\">◀</button>\n                <span>{today.format('YYYY년 MM월')}</span>\n                <button onClick = {() => {setMoment(getMoment.clone().add(1, 'month'))}} className=\"leftRightButton\">▶</button>\n            </div>\n            <table>\n                <tr>\n                    <td style={{color: \"red\"}}>일</td> \n                    <td>월</td>\n                    <td>화</td>\n                    <td>수</td>\n                    <td>목</td>\n                    <td>금</td>\n                    <td style={{color: \"blue\"}}>토</td>\n                </tr>\n                <tbody>\n                    {calendarArr()}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default PoseHistory;\n"]},"metadata":{},"sourceType":"module"}